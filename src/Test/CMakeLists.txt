cmake_minimum_required(VERSION 3.0)
project(Test)

if (NOT VCPKG_TOOLCHAIN)
  find_package(PkgConfig)
  pkg_check_modules(GTKMM gtkmm-3.0)
  include_directories(${GTKMM_INCLUDE_DIRS})
  link_directories(${GTKMM_LIBRARY_DIRS})
  link_libraries(${GTKMM_LIBRARIES})
else()
  find_library(ATK_LIBRARY atk-1.0)
  link_libraries(${ATK_LIBRARY})
  find_library(CAIRO_LIBRARY cairo)
  link_libraries(${CAIRO_LIBRARY})
  find_library(EPOXY_LIBRARY epoxy)
  link_libraries(${EPOXY_LIBRARY})
  find_library(GDK_PIXBUF_LIBRARY gdk_pixbuf-2.0)
  link_libraries(${GDK_PIXBUF_LIBRARY})
  find_library(GDK_LIBRARY gdk-3.0)
  link_libraries(${GDK_LIBRARY})
  find_library(GLIB_LIBRARY glib-2.0)
  link_libraries(${GLIB_LIBRARY})
  find_library(GIO_LIBRARY gio-2.0)
  link_libraries(${GIO_LIBRARY})
  find_library(GOBJECT_LIBRARY gobject-2.0)
  link_libraries(${GOBJECT_LIBRARY})
  find_library(GTK_LIBRARY gtk-3.0)
  link_libraries(${GTK_LIBRARY})
  find_library(SIGC_LIBRARY sigc-2.0)
  link_libraries(${SIGC_LIBRARY})
  find_path(GTK_INCLUDE_DIRS gtk.h)
  include_directories(${GTKMM_INCLUDE_DIRS})
endif()

if (MSVC)
  set(GUI_OPTION WIN32)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4250")
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /ENTRY:mainCRTStartup")
elseif (APPLE)
  set(GUI_OPTION MACOSX_BUNDLE)
endif ()

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
add_executable(Test ${GUI_OPTION} Test.cpp)
